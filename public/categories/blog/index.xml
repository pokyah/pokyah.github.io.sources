<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on pokyah - opensource science, GIS and data-analysis</title>
    <link>/categories/blog/</link>
    <description>Recent content in Blog on pokyah - opensource science, GIS and data-analysis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 31 May 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to quickly create and maintain a blog with R ?</title>
      <link>/post/quickly-create-and-maintain-a-blog-with-r/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/quickly-create-and-maintain-a-blog-with-r/</guid>
      <description>&lt;p&gt;Maintaining a blog allows you to keep track of what you have done and thought. When you don’t remember how did you succeed to find a solution to a tricky problem, browsing your old posts might help you. As a scientist, it’s also the perfect tool to communicate your results to a wider audience. Moreover it allows you to showcase your work and possibly get hired for a future project. Nowadays many tools exist for you to publish on the web. But as a R user you might be interested in a solution that seamlessly integrates with your habitual R workflow : &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown&lt;/a&gt; !&lt;/p&gt;
&lt;div id=&#34;how-to-build-your-site-using-blogdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;How to build your site using blogdown ?&lt;/h1&gt;
&lt;div id=&#34;downloading-the-necessary-stuff&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Downloading the necessary stuff&lt;/h2&gt;
&lt;p&gt;For a detailed explanation, I recommand you to read the full documentation on the blogdown official site. What would be need ? We juste need to install blogdown and &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; (a static site generator like the famous &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;jekyll&lt;/a&gt;). All of this can be achieved with 3 R commands :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;blogdown&amp;quot;)
library(blogdown)
blogdown::install_hugo()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;initiating-a-new-site&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Initiating a new site&lt;/h2&gt;
&lt;p&gt;Now that we have what we need, we simply initiate a new hugo site using the followin R command :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::new_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Doing so will generate all the required files for your site to work. Once the command is executed, we can see our live site in action using :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::serve_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Woah ! Pretty neat and quick, no ? If your site looks “strange” (no styling), you might need to edit some settings in its &lt;code&gt;config.toml&lt;/code&gt; file located at the root of your site folder. At the top of the file, replace the value of the &lt;code&gt;baseurl&lt;/code&gt; key by &lt;code&gt;&amp;quot;/&amp;quot;&lt;/code&gt; and below this line add this key-value pair :&lt;code&gt;relativeurls = true&lt;/code&gt;. Normallyh everything should now looks much more nice !&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;changing-the-parameters-of-the-site&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Changing the parameters of the site&lt;/h2&gt;
&lt;p&gt;Now in the &lt;code&gt;config.toml&lt;/code&gt; you can change the default settings like the title, authorname, etc according to your needs. You can even add new menu items. Once you are happy with your custom config, you &lt;strong&gt;must&lt;/strong&gt; delete your &lt;code&gt;public&lt;/code&gt; folder to avoid possibly conflicting git settings (you will recompile it later, once your git submodules config is done - see below) and turn your blogdown server off :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::stop_server()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;initialise-git-version-control&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Initialise git version control&lt;/h2&gt;
&lt;p&gt;As you will use &lt;a href=&#34;https://pages.github.com/&#34;&gt;github pages&lt;/a&gt; to make your website publicly available, you will need to make its root folder a git repository ((if you don’t know how to use git and github, I would recommand you to take some time to &lt;a href=&#34;http://r-bio.github.io/intro-git-rstudio/&#34;&gt;learn&lt;/a&gt; this inescapable tool for anyone who is building code). So head at &lt;a href=&#34;https://www.github.com&#34;&gt;github&lt;/a&gt; and create a new repository. This repository will hold the source files of your hugo blog and not the rendered blog (you will see why later). Once your hugo blog source files repository is created on github, you will add it as your remote repository for your local website root directory as follows :&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;$ cd &amp;lt;LOCATION_OF_WEBSITE_ROOT_DIR&amp;gt;
$ git init
$ git remote add origin https://github.com/&amp;lt;YOUR_USERNAME&amp;gt;/&amp;lt;reponame&amp;gt;.git
$ git pull
$ git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;publishing-your-site&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Publishing your site&lt;/h1&gt;
&lt;p&gt;Now that your sources are under version control, it’s time to make the rendered static site availble publicly. The first step is to create a special github repository that you must call &lt;code&gt;&amp;lt;YOUR_USERNAME&amp;gt;.github.io&lt;/code&gt;. Once it is created, github will treat it as a special repo and everything you will put into it will be publicly availble at &lt;code&gt;&amp;lt;YOUR_USERNAME&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The second step is to add this repository as a &lt;em&gt;submodule&lt;/em&gt; of your local website root folder actually stored in a fodler called &lt;code&gt;public&lt;/code&gt; (the one yo uhave previously deleted) :&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;$ cd &amp;lt;LOCATION_OF_WEBSITE_ROOT_DIR&amp;gt;
$ git submodule add -b master git@github.com:&amp;lt;YOUR_USERNAME&amp;gt;/&amp;lt;YOUR_USERNAME&amp;gt;.github.io.git public&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, you can tell R blogdown to reconstruct your site under this git versioned &lt;code&gt;public&lt;/code&gt; folder :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;blogdown::serve_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command rebuild your site in the &lt;code&gt;public&lt;/code&gt; folder and allows you to inspect it your site in the RStudio viewer.&lt;/p&gt;
&lt;p&gt;As the 2 latest commands have produced some new files, we need to commit and push these on github :&lt;/p&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;$ cd &amp;lt;LOCATION_OF_WEBSITE_ROOT_DIR&amp;gt;
$ git add . 
$ git commit -m &amp;quot;adding submodule ref&amp;quot;
$ git push
$ cd &amp;lt;LOCATION_OF_WEBSITE_ROOT_DIR/public&amp;gt;
$ git add . 
$ git commit -m &amp;quot;adding rendered files&amp;quot;
$ git push&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nice ! Now you have keeped track of changes made both on your source files repo and on your rendered site repo. Wait a few seconds, and head at &lt;YOUR_USERNAME&gt;.github.io and you should see your website publicly available. Magic !&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-to-change-the-design-of-your-blog&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;How to change the design of your blog ?&lt;/h1&gt;
&lt;p&gt;If you want to change the theme of your blog, there are many ways to achieve this. I’ve found the following procedure to be the most efficient one. It also uses the &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;git submodules&lt;/a&gt; feature. The main idea of the procedure is to separate the versioning of your theme from the versioning of your content.&lt;/p&gt;
&lt;div id=&#34;finding-a-theme&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Finding a theme&lt;/h2&gt;
&lt;p&gt;Head at &lt;a href=&#34;https://themes.gohugo.io/&#34; class=&#34;uri&#34;&gt;https://themes.gohugo.io/&lt;/a&gt; and find the theme that best suits your tastes. Click on its “homepage button”, and fork the repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-it-to-your-website&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Adding it to your website&lt;/h2&gt;
&lt;pre class=&#34;bash&#34;&gt;&lt;code&gt;$ cd &amp;lt;LOCATION_OF_WEBSITE_ROOT_DIR&amp;gt;
$ git submodule add -b master git@github.com:&amp;lt;YOUR_USERNAME&amp;gt;/&amp;lt;THEME_NAME&amp;gt;.github.io.git themes/&amp;lt;THEME_NAME&amp;gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command has cloned your theme in the theme folder of your website. To use it, first make a backup of your &lt;code&gt;config.toml&lt;/code&gt;. Then, in your choosen theme folder, open the &lt;code&gt;exampleSite&lt;/code&gt; folder and copy paste its &lt;code&gt;config.toml&lt;/code&gt; file to your website root folder. We need to proceed this way because &lt;code&gt;config.toml&lt;/code&gt; files are theme dependent. Edit it by inspiring yourself from what was in your backed up config file.&lt;/p&gt;
&lt;p&gt;Once its done, you can ask blogdown to serve your site with its new design, commit and push both the sources and the rendered files.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tweaking-the-theme&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tweaking the theme&lt;/h2&gt;
&lt;p&gt;if you want to make changes to your theme CSS, edit its css file found in your theme’s &lt;code&gt;static&lt;/code&gt; folder. As the theme was added as a submodule you can also version it using it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;linking-files-in-your-posts&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Linking files in your posts&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;../../post/quickly-create-and-maintain-a-blog-with-R_files/Prostate_Cancer.csv&#34;&gt;csv example&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sources&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Sources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;&gt;Hugo Doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>